{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Development/code/Mod-2/Bank-of-Flatiron/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TransactionsTable from './TransactionsTable';\nimport TransactionForm from './TransactionForm';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:3000/transactions').then(response => setTransactions(response.data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Add a new transaction to the table\n  const addTransaction = newTransaction => {\n    setTransactions([...transactions, newTransaction]);\n  };\n\n  // Filter transactions based on the search term\n  const filteredTransactions = transactions.filter(transaction => transaction.description.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Sort transactions by category or description\n  const sortTransactions = key => {\n    const sortedTransactions = [...transactions].sort((a, b) => a[key].localeCompare(b[key]));\n    setTransactions(sortedTransactions);\n  };\n\n  // Delete a transaction\n  const deleteTransaction = id => {\n    const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n    setTransactions(updatedTransactions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bank Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortTransactions('category'),\n      children: \"Sort by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortTransactions('description'),\n      children: \"Sort by Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      transactions: filteredTransactions,\n      deleteTransaction: deleteTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TJdUscyMgtOJRF9rZmcbRXPgMXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TransactionsTable","TransactionForm","SearchBar","axios","jsxDEV","_jsxDEV","App","_s","transactions","setTransactions","searchTerm","setSearchTerm","get","then","response","data","catch","error","console","addTransaction","newTransaction","filteredTransactions","filter","transaction","description","toLowerCase","includes","sortTransactions","key","sortedTransactions","sort","a","b","localeCompare","deleteTransaction","id","updatedTransactions","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Development/code/Mod-2/Bank-of-Flatiron/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TransactionsTable from './TransactionsTable';\nimport TransactionForm from './TransactionForm';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\n\nconst App = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/transactions')\n      .then(response => setTransactions(response.data))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Add a new transaction to the table\n  const addTransaction = (newTransaction) => {\n    setTransactions([...transactions, newTransaction]);\n  };\n\n  // Filter transactions based on the search term\n  const filteredTransactions = transactions.filter(transaction =>\n    transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Sort transactions by category or description\n  const sortTransactions = (key) => {\n    const sortedTransactions = [...transactions].sort((a, b) =>\n      a[key].localeCompare(b[key])\n    );\n    setTransactions(sortedTransactions);\n  };\n\n  // Delete a transaction\n  const deleteTransaction = (id) => {\n    const updatedTransactions = transactions.filter(\n      (transaction) => transaction.id !== id\n    );\n    setTransactions(updatedTransactions);\n  };\n\n  return (\n    <div>\n      <h1>Bank Transactions</h1>\n      <TransactionForm addTransaction={addTransaction} />\n      <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      <button onClick={() => sortTransactions('category')}>\n        Sort by Category\n      </button>\n      <button onClick={() => sortTransactions('description')}>\n        Sort by Description\n      </button>\n      <TransactionsTable\n        transactions={filteredTransactions}\n        deleteTransaction={deleteTransaction}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}